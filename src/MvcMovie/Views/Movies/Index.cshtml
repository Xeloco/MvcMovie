@using Movies.BLL.Models

@model MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
    var genres = 
        Model.genres.Select(g => new SelectListItem { Text = g });

}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="movieGenre" asp-items="@genres" id="dropGenero">
            <option value="">All</option>
        </select>

        Title: <input type="text" name="SearchString" id="SearchString">
        <input type="button" id="go" value="GOGO"/>
    </p>
</form>

<table id="movies" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.movies[0].Title)

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


@section Scripts
{
<script>

    $("#go").on("click", function () {
        $.ajax({
            type: "GET",
            url: '@Url.Action("AjaxSearch")',
            data: {
                SearchString: $("#SearchString").val(),
                movieGenre: $("#dropGenero").val()
            },
            success: function (data) {

                $("tbody").empty();
                $("tbody").append(data);
                var rows = document.getElementById('movies').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
                if (rows === 0) {

                    alert("Nothing found for your criteria");
                 }
            },
        });
    })
    </script>

}
